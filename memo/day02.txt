Visual Code 한글 설정
	좌측 하단 마켓 플레이스(확장) 아이콘 클릭 > korean 검색
	> Korean(사용법) Language Pack for Visual Studio Code 설치

Visual Code 언어 설정 변경
	F1 또는 Ctrl + Shift + p >
	Configure Display Language 입력 > 언어 선택(en, ko) > 재시작

Visual Code 테마 변경
	F1 또는 Ctrl + Shift + p >
	한국어로 설정 시 : 테마 검색 > 색 테마 클릭 > 원하는 테마로 변경
	영어로 설정 시 : theme 검색 > color theme 클릭 > 원하는 테마로 변경

기본 단축키
	Ctrl + b : 전체 화면
	Alt + 방향키 : 한 줄 이동
	Alt + Shift + 방향키 : 한 줄 복사
	Ctrl + x : 한 줄 잘라내기(삭제할 때 자주 사용)
	Ctrl + Alt + 방향키 : 그리드 모드, 종료 시 esc
	F2 : 전체 이름 변경

HTML 기본 단축키
	1. 태그명(요소명) 작성 후 Tab
		div -> Tab -> <div></div> 완성
	
	2. 태그명(요소명).클래스명 작성 후 Tab
		div.wrap -> Tab -> <div class="wrap"></div> 완성

	3. 태그명(요소명)#아이디명 작성 후 Tab
		div#container -> Tab -> <div id="container"></div> 완성
	
	4. 태그명(요소명)*n 작성 후 Tab
		div*4 -> Tab -> <div></div><div></div><div></div><div></div>
		div.wrap*3 -> Tab ->
		<div class="wrap"></div>
    		<div class="wrap"></div>
    		<div class="wrap"></div>


Visual Code에서 html파일 실행하는 방법
	1. 해당 경로로 직접 들어가서 크롬브라우저로 실행한다(불편해서 못함).
	2. 마켓 플레이스에서 open in browser 설치, Alt + b로 실행
	   만약 크롬브라우저로 실행되지 않는다면 
	   해당 html파일 우클릭 > 연결 프로그램 > 다른 앱 선택
	   > 항상 .html을 이 앱으로 실행 체크 > Chrome 선택
	3. 마켓 플레이스에서 live server 설치, Alt + l 그리고 Alt + o로 실행
	   문서가 저장되면 바로 화면에 반영됨.
-------------------------------------------------------------------------------------------
자바스크립트 코드의 위치
	1. HTML태그의 이벤트 리스너 속성에 작성
		HTML태그에는 마우스가 클릭되거나 키보드의 키가 입력되는 등의 이벤트가 발생할 때
		처리하는 코드를 등록하는 리스너 속성이 있다. 이 속성에 자바스크립트 코드를 작성할 수 있다.

	2. <script></script> 내에 작성
		<head></head>, <body></body>, body태그 밖 등 어디든 들어갈 수 있다.
		웹 페이지 내에서 여러 번 작성할 수 있다.
		<script src="경로"></script> : 외부 js파일을 불러올 때 사용

	3. 자바스크립트 파일에 작성
		자바스크립트 코드를 확장자가 .js인 별도의 파일로 저장하고,
		<script src=".js경로"></script>를 통해 불러서 사용한다.

	4. URL부분에 작성
		<a>태그의 href속성 등에도 자바스크립트 코드를 작성할 수 있다.
		하지만 href속성에서 자바스크립트 코드를 쓸 때에는 javascript라는 키워드를 작성해야 한다.
-----------------------------------------------------------------------------------------------
자바스크립트로 HTML요소 출력
	자바스크립트 코드로 HTML요소를 웹 페이지에 직접 삽입하여 브라우저 윈도우에
	출력되게 할 수 있다. 이 때 document.write() 혹은 document.writeln()을 사용한다.

	※ writeln()은 줄바꿈(\n)문자가 삽입된다. 하지만 HTML에서 줄바꿈 문자를 줄바꿈으로 표현하지 않기 때문에
	  <pre>태그를 사용하여 줄바꿈을 표현할 수 있다.

자바스크립트 다이얼로그 : 사용자 입력 및 메세지 출력
	사용자에게 메세지를 출력하거나, 입력을 받을 수 있는 3가지 다이얼로그가 있다.
	
	- 프롬프트 다이얼로그
		prompt("메세지", "디폴트 입력 값")

		디폴트 입력 값은 생략이 가능하다.
		사용자가 입력한 문자열 값을 리턴하지만 아무 값도 입력하지 않으면 ""을 리턴,
		취소나 강제로 닫으면 null을 리턴한다.

	- 확인 다이얼로그
		confirm("메세지")

		확인/취소 버튼을 가진 다이얼로그를 출력한다.
		확인 true, 취소 혹은 강제로 닫을 시 false를 리턴한다.
	
	- 경고 다이얼로그
		alert("메세지");
------------------------------------------------------------------------------------------
데이터 타입과 변수
	1. 자바스크립트 식별자(이름)
		식별자(identifier)란 자바스크립트 개발자가 변수, 상수, 함수에 붙이는 이름이다.
		식별자를 만들 때 다음 규칙을 준수해야 한다.

		- 첫 번째 문자 : 알파벳, 언더바, $문자만 사용 가능
		- 두 번째이상 문자 : 알파벳, 언더바, 0-9, $ 사용가능
		- 대소문자 구분 : data와 dAta는 다른 식별자이다.
		- 키워드는 사용 불가

		6variable	(X)
		student_id	(O)
		_code		(O)
		if		(X)
		%calc		(X)
		data		(O)

	2. 문장 구분
		세미콜론으로 문장과 문장을 구분한다.
		한 줄에 한 문장만 있는 경우 세미콜론을 생략할 수 있다.
	
		i = i + 1		(O)
		j = j + 1;		(O)
		k = k + 1; m = m + 1	(O)
		n = n + 1 p = p + 1	(X)

	3. 주석
		- 한 줄 주석 : //
		- 범위 주석 : /* */

	4. 데이터 타입(typeof())
		- 숫자 타입(number) : 42, 3.14,...
		- 논리 타입 : true, false
		- 문자열 타입 : "안녕", '하세요', "35", 'a', "A",...
		- 객체 레퍼런스 타입 : 객체를 가리킨다.
		- undefined, null
			1) undefined : 타입이 정해지지 않은 것을 의미한다.
			2) null : 값이 정해지지 않다는 값이다.


	5. 변수
		- var 키워드로 변수를 선언한다.
			var score;		
			var year, month, day;
			var address = "남양주";

		- var 키워드 없이 변수를 선언한다.
			age = 20;
			만약 위에 age가 이미 선언되어 있다면 값 수정.
			var를 반드시 붙여서 선언하는 것이 명료하고, 실수를 막을 수 있기 때문에
			var없이 선언하지 말자!

	6. 지역변수와 전역변수
		변수의 사용범위(scope)에 따라서 전역변수(global)와 지역변수(local)로 나뉜다.
		var로 선언 시, scope는 반드시 함수의 영역만 판단한다.

		전역변수 : 함수 밖에서 선언되거나 함수 안에서 var 키워드 없이 선언.
		지역변수 : 함수 안에서 var 키워드로 선언. 선언된 함수 내에서만 사용 가능.

	7. 상수
		let : 수정 가능
		const : 수정 불가능
----------------------------------------------------------------------------------
함수
	인자(파라미터, parameter) : 매개변수(선언부)
	인수(아규먼트, argument)  : 매개변수에 들어가는 값(사용부, 호출부)

	function 식별자(param1, param2, ...){
		코드 작성
		return 리턴 값;
	}

	function : 함수 선언 표시
	식별자 : 동사로 작성
	parameter : 여러 개 있을 때에는 콤마로 분리하고 자료형을 따로 작성하지 않는다, 생략도 가능하다.
	return : 함수의 실행 종료 후 리턴값을 반환한다.

























정규 표현식(Regular expression)
	문자열의 패턴을 표현하기 위한 식이며, 유효성 검사에 주로 사용된다.

패턴(Pattern)과 정규식
	우편번호 : 333-565
	우편번호는 숫자 세 개로 시작하여 -(하이폰) 그리고 마지막에 숫자 3개로 끝난다.
	이러한 것을 패턴이라고 한다.
	정규식으로 위 패턴을 /\d{3}-\d{3}/
	\d는 숫자를, {3}은 3번 반복이라는 의미이다.

정규식 생성
	RegExp객체를 생성하여 프로토타입에 정규식을 전달하거나,
	/로 시작하여 /로 닫는 영역 안에 정규식을 작성할 수 있다.

	RegExp 프로토타입에 정규식을 작성할 때에는 \가 무시되기 때문에
	\를 두 번 사용하여 \\로 표현해야 한다.

	var reg1 = new RegExp("\\d{3}-\\d{3}");
	var reg2 = /\d{3}-\d{3}/;

정규식의 장단점
	간단한 검사, 코드 간결화에 사용되지만, 복잡해질 수록 유지보수에 어려움을 겪는다.
	또한 정규식만 사용하여 검사할 경우 보안상 취약해질 수 있다.
	따라서 간단한 검사에서만 사용하도록 하고 나머지 복잡한 연산들은 제어문과 메소드를 통해 구현한다.

정규식 어려워? 여기에서 갖다 써!
	https://regexr.com/












브라우저 객체 모델(BOM)

자바스크립트를 이용하면 브라우저의 정보에 접근하거나 브라우저의 여러 기능들을 제어할 수 있다.
이 때 사용할 수 있는 객체 모델을 브라우저 객체 모델(BOM)이라고 한다.
브라우저 객체 모델은 문서 객체 모델(DOM)과 달리 W3C의 표준 객체 모델은 아니지만
자바스크립트가 브라우저의 기능적인 요소들을 직접 제어하고 관리할 수 있는 방법을 제공해준다.
=========================================================================
window 객체
	웹 브라우저의 창(window)을 나타내는 객체로, 대부분의 웹 브라우저에서 지원한다.
	자바스크립트의 모든 객체, 전역 함수, 전역 변수들은 자동으로 window 객체의
	프로퍼티가 된다.

window.onload = function(){}
	스크립트 언어는 위에서 아래로 해석되기 때문에 DOM에서 HTML 요소를 추출할 때
	body보다 위에 있으면 해석 순서에 오류가 생길 수 있다.
	이 경우 자바스크립트 문서를 밑으로 옮겨야 하는데, HTML 문서가 길어지면,
	가독성이 좋지 않고 불편할 수 있다. 따라서 window.onload()를 사용하면
	문서가 준비된 상황 이후에 발동 시킬 수 있다.

window.open()
	window객체의 open()메소드를 이용하면, 새로운 브라우저 창을 열 수 있으며,
	새로운 브라우저 창의 세부적인 옵션들도 일일이 설정할 수 있다.

	var 객체명 = window.open(url, name, specs);

	1) 객체명 : 새로 만들어진 창 객체가 반환되고 창의 생성에 실패하면 null을 리턴한다.
	           이 객체를 통해서 새 창을 제어할 수 있고, 객체명.close()로 창을 닫을 수 있다.

	2) url : 이동할 주소
	
	3) name
		_blank(default): 새 창
		_parent: 부모 프레임
		_self: 현재 페이지
		_child: 현재 페이지의 자식 페이지(서브 창)

	4) specs: 선택적인 값으로 창의 크기, 스크롤 여부, 리사이즈 가능 등의 속성을 지정한다.
		height=픽셀: 창의 높이 지정
		width=픽셀: 창의 너비 지정
=============================================================================================
location 객체
	location 객체는 현재 브라우저에 표시된 HTML문서의 주소를 얻거나,
	브라우저에 새 문서를 불러올 때 사용할 수 있다.
	location 객체의 프로퍼티와 메소드를 이용하면, 현재 문서의 URL 주소를
	다양하게 해석하여 처리할 수 있게 된다.

	- href: 페이지의 URL 전체 정보 반환. URL을 지정하여 페이지 이동 가능.
	- pathname: URL 경로부분의 정보를 반환한다.
	- port: 포트번호를 반환한다.
	- reload(): 새로고침
	- assign(): 현재 URL을 지정한 URL로 바꿔서 페이지 이동
	- replace(): 현재 URL을 지정한 URL로 바꾸고 이전 페이지로 돌아갈 수 없게 한다





















